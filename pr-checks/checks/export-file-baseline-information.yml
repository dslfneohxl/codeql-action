name: "Export file baseline information"
description: "Tests that file baseline information is exported when the feature is enabled"
versions: ["nightly-latest"]
steps:
  - uses: swift-actions/setup-swift@194625b58a582570f61cc707c3b558086c26b723
    # Windows doesn't support Swift, and only macOS latest and nightly-latest support Swift 5.7.1.
    if: runner.os == 'Linux' || (runner.os == 'macOS' && matrix.version == 'cached')
    with:
      swift-version: "5.7.0"
  - uses: ./../action/init
    with:
      languages: javascript
      tools: ${{ steps.prepare-test.outputs.tools-url }}
    env:
      CODEQL_FILE_BASELINE_INFORMATION: true
      CODEQL_ENABLE_EXPERIMENTAL_FEATURES_SWIFT: true
  - name: Build code
    shell: bash
    run: ./build.sh
  - uses: ./../action/analyze
    with:
      output: "${{ runner.temp }}/results"
    env:
      CODEQL_FILE_BASELINE_INFORMATION: true
      CODEQL_ENABLE_EXPERIMENTAL_FEATURES_SWIFT: true
  - name: Upload SARIF
    uses: actions/upload-artifact@v3
    with:
      name: with-baseline-information-${{ matrix.os }}-${{ matrix.version }}.sarif.json
      path: "${{ runner.temp }}/results/javascript.sarif"
      retention-days: 7
  - name: Check results
    shell: bash
    run: |
      cd "$RUNNER_TEMP/results"
      expected_baseline_languages="cpp cs go java js py rb swift"

      for lang in ${expected_baseline_languages}; do
        rule_name="${lang}/baseline/expected-extracted-files"
        found_notification=$(jq --arg rule_name "${rule_name}" '[.runs[0].tool.driver.notifications |
          select(. != null) | flatten | .[].id] | any(. == $rule_name)' javascript.sarif)
        if [[ "${found_notification}" != "true" ]]; then
          echo "Expected SARIF output to contain notification '${rule_name}', but found no such notification."
          exit 1
        else
          echo "Found notification '${rule_name}'."
        fi
      done

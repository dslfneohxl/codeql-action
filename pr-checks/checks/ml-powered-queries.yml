name: "ML-powered queries"
description: "Tests that ML-powered queries are run with the security-extended suite and that they produce alerts on a test DB"
steps:
  - uses: ./../action/init
    with:
      languages: javascript
      queries: security-extended
      source-root: ./../action/tests/ml-powered-queries-repo
      tools: ${{ steps.prepare-test.outputs.tools-url }}

  - uses: ./../action/analyze
    with:
      output: "${{ runner.temp }}/results"
      upload-database: false

  - name: Upload SARIF
    uses: actions/upload-artifact@v3
    with:
      name: ml-powered-queries-${{ matrix.os }}-${{ matrix.version }}.sarif.json
      path: "${{ runner.temp }}/results/javascript.sarif"
      retention-days: 7

  - name: Check sarif
    uses: ./../action/.github/actions/check-sarif
    with:
      sarif-file: ${{ runner.temp }}/results/javascript.sarif
      queries-run: js/ml-powered/nosql-injection,js/ml-powered/path-injection,js/ml-powered/sql-injection,js/ml-powered/xss
      queries-not-run: foo,bar

  - name: Check results
    shell: bash
    run: |
      cd "$RUNNER_TEMP/results"
      # We should run at least the ML-powered queries in `expected_rules`.
      expected_rules="js/ml-powered/nosql-injection js/ml-powered/path-injection js/ml-powered/sql-injection js/ml-powered/xss"

      for rule in ${expected_rules}; do
        found_rule=$(jq --arg rule "${rule}" '[.runs[0].tool.extensions[].rules | select(. != null) |
          flatten | .[].id] | any(. == $rule)' javascript.sarif)
        echo "Did find rule '${rule}': ${found_rule}"
        if [[ "${found_rule}" != "true" ]]; then
          echo "Expected SARIF output to contain rule '${rule}', but found no such rule."
          exit 1
        fi
      done

      # We should have at least one alert from an ML-powered query.
      num_alerts=$(jq '[.runs[0].results[] |
        select(.properties.score != null and (.rule.id | startswith("js/ml-powered/")))] | length' \
        javascript.sarif)
      echo "Found ${num_alerts} alerts from ML-powered queries.";
      if [[ "${num_alerts}" -eq 0 ]]; then
        echo "Expected to find at least one alert from an ML-powered query but found ${num_alerts}."
        exit 1
      fi
